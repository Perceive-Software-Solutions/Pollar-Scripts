USE db1;

CREATE TABLE AssetCollection (
  collectionID INT NOT NULL AUTO_INCREMENT,
  PIT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (collectionID)
);

CREATE TABLE Asset (
  assetID INT NOT NULL AUTO_INCREMENT,
  link TEXT NOT NULL,
  collectionID INT NOT NULL,
  assetType ENUM('Picture', 'Video', 'Gif', 'Link', 'Other') NOT NULL DEFAULT 'Other',
  PRIMARY KEY (assetID),
  FOREIGN KEY (collectionID) REFERENCES AssetCollection(collectionID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Category (
  categoryID INT NOT NULL AUTO_INCREMENT,
  categoryName TEXT NOT NULL,
  PRIMARY KEY (categoryID)
);

CREATE TABLE Topic (
  topicID INT NOT NULL AUTO_INCREMENT,
  topicName TEXT NOT NULL,
  categoryID INT DEFAULT NULL,
  collectionID INT DEFAULT NULL,
  PRIMARY KEY (topicID),
  FOREIGN KEY (collectionID) REFERENCES AssetCollection(collectionID) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (categoryID) REFERENCES Category(categoryID) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE UserInfo (
  userInfoID INT NOT NULL AUTO_INCREMENT,
  firstName VARCHAR(200) NOT NULL,
  lastName VARCHAR(200) NOT NULL,
  gender VARCHAR(200) DEFAULT NULL,
  profilePicture INT DEFAULT NULL,
  username VARCHAR(200) NOT NULL UNIQUE,
  PRIMARY KEY (userInfoID),
  FOREIGN KEY (profilePicture) REFERENCES AssetCollection(collectionID) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE UserMain (
  userMainID INT NOT NULL AUTO_INCREMENT,
  userInfoID INT NOT NULL,
  hashedPassword TEXT NOT NULL,
  readReceipts BOOLEAN NOT NULL DEFAULT 1,
  contactsSynced BOOLEAN NOT NULL DEFAULT 0,
  PRIMARY KEY (userMainID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Poll (
  pollID INT NOT NULL AUTO_INCREMENT,
  userInfoID INT,
  topicID INT,
  collectionID INT DEFAULT NULL,
  title TEXT DEFAULT NULL,
  content MEDIUMTEXT NOT NULL,
  PIT DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  pollStatus ENUM('Submitted', 'Approved', 'Declined') NOT NULL DEFAULT 'Submitted',
  pollType ENUM('Rule', 'Report', 'Poll') NOT NULL DEFAULT 'Poll',
  anon BOOLEAN NOT NULL DEFAULT 0,
  draft BOOLEAN NOT NULL DEFAULT 0,
  deleted BOOLEAN NOT NULL DEFAULT 0,
  PRIMARY KEY (pollID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (topicID) REFERENCES Topic(topicID) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (collectionID) REFERENCES AssetCollection(collectionID) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE Post (
  postID INT NOT NULL AUTO_INCREMENT,
  userInfoID INT,
  parentTopicID INT,
  parentType ENUM("Topic", "Poll", "Post") NOT NULL DEFAULT "Topic",
  parentPollID INT,
  parentPostID INT,
  messageText MEDIUMTEXT NOT NULL,
  PIT DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  vote BOOLEAN DEFAULT NULL,
  cachedLikes INT NOT NULL DEFAULT 0,
  isHidden BOOLEAN NOT NULL DEFAULT 0,
  draft BOOLEAN NOT NULL DEFAULT 0,
  deleted BOOLEAN NOT NULL DEFAULT 0,
  collectionID INT DEFAULT NULL,
  PRIMARY KEY (postID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (parentTopicID) REFERENCES Topic(topicID) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (parentPollID) REFERENCES Poll(pollID) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (parentPostID) REFERENCES Post(postID) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (collectionID) REFERENCES AssetCollection(collectionID) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE Chat (
  channelID VARCHAR(500) NOT NULL UNIQUE,
  collectionID INT DEFAULT NULL,
  chatName TEXT DEFAULT NULL,
  timeToken INT DEFAULT 0,
  groupChat BOOLEAN NOT NULL DEFAULT 0,
  PRIMARY KEY (channelID),
  FOREIGN KEY (collectionID) REFERENCES AssetCollection(collectionID) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE ChatMembership (
  userInfoID INT NOT NULL,
  channelID VARCHAR(500) NOT NULL,
  accepted BOOLEAN NOT NULL DEFAULT 0,
  readReceipts BOOLEAN NOT NULL DEFAULT 1,
  notifications BOOLEAN NOT NULL DEFAULT 1,
  PRIMARY KEY (userInfoID, channelID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (channelID) REFERENCES Chat(channelID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE UserDevice (
  token VARCHAR(500) NOT NULL,
  userMainID INT NOT NULL,
  device TEXT NOT NULL,
  PIT DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (token, userMainID),
  FOREIGN KEY (userMainID) REFERENCES UserMain(userMainID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Follow (
  userInfoID INT NOT NULL,
  recipientID INT NOT NULL,
  PIT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (userInfoID, recipientID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (recipientID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PollResponse (
  userInfoID INT NOT NULL,
  pollID INT NOT NULL,
  modifiedBy INT,
  vote BOOLEAN DEFAULT NULL,
  PIT DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (userInfoID, pollID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (modifiedBy) REFERENCES UserInfo(userInfoID) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (pollID) REFERENCES Poll(pollID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Story (
  userInfoID INT NOT NULL,
  pollID INT NOT NULL,
  pollResponseUserID INT NOT NULL,
  expireAt DATETIME DEFAULT (CURRENT_TIMESTAMP + INTERVAL 1 DAY) NOT NULL,
  seen BOOLEAN NOT NULL DEFAULT 0,
  PRIMARY KEY (userInfoID, pollID, pollResponseUserID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (pollResponseUserID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (pollID) REFERENCES Poll(pollID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (pollResponseUserID, pollID) REFERENCES PollResponse(userInfoID, pollID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE UserDeactivated (
  userMainID INT NOT NULL,
  PIT DATETIME DEFAULT (CURRENT_TIMESTAMP + INTERVAL 30 DAY) NOT NULL,
  PRIMARY KEY (userMainID),
  FOREIGN KEY (userMainID) REFERENCES UserMain(userMainID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Rule (
  topicID INT NOT NULL,
  pollID INT NOT NULL,
  PRIMARY KEY (topicID, pollID),
  FOREIGN KEY (topicID) REFERENCES Topic(topicID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (pollID) REFERENCES Poll(pollID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PostStat (
  userInfoID INT NOT NULL,
  postID INT NOT NULL,
  PIT DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  liked BOOLEAN NOT NULL DEFAULT 0,
  PRIMARY KEY (userInfoID, postID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (postID) REFERENCES Post(postID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Subscription (
  userInfoID INT NOT NULL,
  topicID INT NOT NULL,
  PIT DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (topicID, userInfoID),
  FOREIGN KEY (topicID) REFERENCES Topic(topicID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE NotificationSettings (
  userMainID INT NOT NULL,
  -- Post
  POSTS_LIKES ENUM('OFF', 'FOLLOWERS', 'EVERYONE') DEFAULT 'EVERYONE' NOT NULL,
  POSTS_NEW_TRUSTS ENUM('OFF', 'FOLLOWERS', 'EVERYONE') DEFAULT 'EVERYONE' NOT NULL,
  POSTS_FIRST_POSTS ENUM('OFF', 'FOLLOWERS', 'EVERYONE') DEFAULT 'FOLLOWERS' NOT NULL,
  POSTS_REPLIES ENUM('OFF', 'FOLLOWERS', 'EVERYONE') DEFAULT 'EVERYONE' NOT NULL,
  POSTS_VOTES ENUM('OFF', 'FOLLOWERS', 'EVERYONE') DEFAULT 'FOLLOWERS' NOT NULL,
  -- Poll
  POLLS_ACCEPTED_POLL_SUBMISSION BOOLEAN DEFAULT 1 NOT NULL,
  POLLS_EXPIRE_SOON BOOLEAN DEFAULT 1 NOT NULL,
  POLLS_RESULTS BOOLEAN DEFAULT 1 NOT NULL,
  POLLS_TRENDING BOOLEAN DEFAULT 1 NOT NULL,
  -- Message
  MESSAGES_MESSAGE BOOLEAN DEFAULT 1 NOT NULL,
  MESSAGES_REQUEST BOOLEAN DEFAULT 1 NOT NULL,
  MESSAGES_GROUP_REQUEST BOOLEAN DEFAULT 1 NOT NULL,
  -- Follow
  FOLLOWS_NEW_FOLLOW BOOLEAN DEFAULT 1 NOT NULL,
  FOLLOWS_NEW_FRIEND BOOLEAN DEFAULT 1 NOT NULL,
  -- Trusts (stories)
  TRUSTS_TRUST BOOLEAN DEFAULT 1 NOT NULL,
  TRUSTS_TRUSTING BOOLEAN DEFAULT 1 NOT NULL,
  PRIMARY KEY (userMainID),
  FOREIGN KEY (userMainID) REFERENCES UserMain(userMainID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Trust (
  userInfoID INT NOT NULL,
  recipientID INT NOT NULL,
  topicID INT NOT NULL,
  cachedAgrees INT DEFAULT 0 NOT NULL,
  cachedDisagrees INT DEFAULT 0 NOT NULL,
  PIT DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (userInfoID, topicID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (recipientID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (topicID) REFERENCES Topic(topicID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE UserPhone (
  phoneNumber VARCHAR(20) NOT NULL,
  userMainID INT NOT NULL,
  code INT NOT NULL,
  verified BOOLEAN NOT NULL DEFAULT 0,
  PRIMARY KEY (phoneNumber),
  FOREIGN KEY (userMainID) REFERENCES UserMain(userMainID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE UserBlocking (
  userInfoID INT NOT NULL,
  userBlocked INT NOT NULL,
  PRIMARY KEY (userInfoID, userBlocked),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (userBlocked) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE UserEmail (
  email VARCHAR(100) NOT NULL,
  userMainID INT NOT NULL,
  code INT NOT NULL,
  verified BOOLEAN NOT NULL DEFAULT 0,
  PRIMARY KEY (email),
  FOREIGN KEY (userMainID) REFERENCES UserMain(userMainID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Notif (
  notificationID INT NOT NULL AUTO_INCREMENT,
  userInfoID INT NOT NULL,
  parent ENUM('posts', 'polls', 'messages', 'follows', 'trusts') NOT NULL, 
  child ENUM('likes', 'newTrusts', 'firstPosts', 'replies', 'votes', 'acceptedPollSubmissions', 'pollsExpireSoon', 'pollResult', 'trendingPolls', 'messages', 'messageRequests', 'groupRequests', 'newFollowers', 'friendsOnPollar', 'trusts', 'trusting') NOT NULL,
  notifType ENUM('post', 'trust', 'poll', 'chat', 'userInfo', 'storyResponse', 'story') NOT NULL,
  typeID INT NOT NULL,
  subjectNotif TEXT NOT NULL,
  seen BOOLEAN NOT NULL DEFAULT 0,
  PRIMARY KEY (notificationID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE NotifActor (
  notifID INT NOT NULL,
  actorID INT NOT NULL,
  PIT DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY(notifID, actorID),
  FOREIGN KEY (notifID) REFERENCES Notif(notificationID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (actorID) REFERENCES UserInfo(userInfoID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE AssetMessage (
  userInfoID INT NOT NULL,
  collectionID INT NOT NULL,
  channelID VARCHAR(500) NOT NULL,
  PRIMARY KEY (collectionID, channelID),
  FOREIGN KEY (userInfoID) REFERENCES UserInfo(userInfoID) ON UPDATE CASCADE,
  FOREIGN KEY (collectionID) REFERENCES AssetCollection(collectionID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (channelID) REFERENCES Chat(channelID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (userInfoID, channelID) REFERENCES ChatMembership(userInfoID, channelID) ON UPDATE CASCADE
);
